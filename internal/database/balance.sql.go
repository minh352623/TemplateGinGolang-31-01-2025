// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: balance.sql

package database

import (
	"context"
)

const createBalance = `-- name: CreateBalance :one
INSERT INTO balance (id, user_id, balance) VALUES ($1, $2, $3) RETURNING id, user_id, balance
`

type CreateBalanceParams struct {
	ID      int32
	UserID  int32
	Balance int32
}

func (q *Queries) CreateBalance(ctx context.Context, arg CreateBalanceParams) (Balance, error) {
	row := q.db.QueryRowContext(ctx, createBalance, arg.ID, arg.UserID, arg.Balance)
	var i Balance
	err := row.Scan(&i.ID, &i.UserID, &i.Balance)
	return i, err
}

const getBalanceById = `-- name: GetBalanceById :one
SELECT id, user_id, balance FROM balance WHERE id = $1
`

func (q *Queries) GetBalanceById(ctx context.Context, id int32) (Balance, error) {
	row := q.db.QueryRowContext(ctx, getBalanceById, id)
	var i Balance
	err := row.Scan(&i.ID, &i.UserID, &i.Balance)
	return i, err
}
